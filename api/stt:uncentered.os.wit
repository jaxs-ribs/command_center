interface stt {
    variant stt-request {
        register-api-key(string),
        openai-transcribe(list<u8>),
    }

    variant stt-response {
        register-api-key(result<string, string>),
        openai-transcribe(result<string, string>),
    }

    /// register-api-key() registers the given key as the new key. 
    /// Necessary before making any other calls, as those use the api key
    /// under the hood.
    register-api-key: func(key: string) -> result<string, string>;

    /// openai-transcribe() takes a list of bytes representing an audio file
    /// and returns a transcription of the audio using OpenAI's Whisper model.
    /// An API key must be registered first using register-api-key().
    openai-transcribe: func(audio: list<u8>) -> result<string, string>;
}

world stt-uncentered-dot-os-api-v0 {
    export stt;
}

world stt-uncentered-dot-os-v0 {
    import stt;
    include process-v0;
}