interface tg {
    variant tg-request {
        register-token(string),
        subscribe,
        unsubscribe,
        get-file(string),
        send-message(send-message-params)
    }

    variant tg-response {
        register-token(result<_, string>),
        subscribe(result<_, string>),
        unsubscribe(result<_, string>),
        get-file(result<_, string>), 
        send-message(result<_, string>)
    }

    record send-message-params {
        chat-id: s32, 
        text: string,
    }

    register-token: func(token: string) -> result<_, string>;
    subscribe: func() -> result<_, string>;
    unsubscribe: func() -> result<_, string>;
    get-file: func(file-id: string) -> result<_, string>;
    send-message: func(params: send-message-params) -> result<_, string>;
}

world tg-uncentered-dot-os-api-v0 {
    export tg;
}

world tg-uncentered-dot-os-v0 {
    import tg;
    include process-v0;
}